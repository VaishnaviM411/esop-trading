name: test-build-deploy

on:
  push:
    branch: "vaishnavi"
  pull_request:
    branch: "vaishnavi"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Test
        run: ./gradlew test

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Build
        run: ./gradlew build
      - name: Copy jar file to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: esop-trading-1.0
          path: build/libs/esop-0.1-all.jar

  terraform:
    runs-on: ubuntu-latest
    outputs:
      key: ${{ steps.terraform_output.outputs.key }}
      public_ip: ${{ steps.terraform_output.outputs.public_ip }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3

      - name: Create aws_instance
        id: create_instance
        run: cd terraform/aws_instance; terraform init

      - name: Setup Terraform
        id: setup_terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Apply
        id: terraform_apply
        run: cd terraform/aws_instance; terraform apply -auto-approve -input=false

      - name: Terraform Output
        id: terraform_output
        run: |
          cd terraform/aws_instance
          echo key=$(terraform output -raw private_key) >> $GITHUB_OUTPUT
          echo public_ip=$(terraform output instance_public_ip) >> $GITHUB_OUTPUT



  deploy:
    needs: ["build", "terraform"]
    runs-on: ubuntu-latest
    steps:
      - name: Setup java
        uses: actions/setup-java@v3
        with:
            distribution: corretto
            java-version: 17
      - name: Download jar file
        uses: actions/download-artifact@v3
        with:
          name: esop-trading-1.0
      - name: Copy jar on ec2 instance and run
        env:
          SSH_PRIVATE_KEY: ${{ needs.terraform.outputs.key }}
          SSH_HOST: ${{ needs.terraform.outputs.public_ip }}
        run: |
          eval `ssh-agent`
          cd .ssh
          ls
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
          ls
          scp -o StrictHostKeyChecking=no "esop-0.1-all.jar" ec2-user@$SSH_HOST:~
          #!/bin/bash
          pid=$(sudo lsof -n -i :80 -sTCP:LISTEN -t)
          
          if [ -n "$pid" ]; then
            sudo kill "$pid"
          fi
          
          sudo MICRONAUT_SERVER_PORT=80 nohup java -jar esop-0.1-all.jar >/dev/null 2>&1 &
          
          

      
          





